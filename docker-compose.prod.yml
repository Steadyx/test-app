version: '3.8'

networks:
  test-app_default:
    name: test-app_default
    driver: overlay
    attachable: true
    labels:
      - "com.example.description=Main Traefik network for all services"

secrets:
  cf_api_key:
    external: true

services:
  traefik-main:
    image: traefik:v2.10
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=test-app_default"
      - "--providers.docker.swarmmode=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.web.http.redirections.entryPoint.permanent=true"
      - "--certificatesresolvers.le.acme.dnschallenge=true"
      - "--certificatesresolvers.le.acme.dnschallenge.provider=cloudflare"
      - "--certificatesresolvers.le.acme.email=edwardlanekemp@gmail.com"
      - "--certificatesresolvers.le.acme.storage=/acme.json"
      - "--certificatesresolvers.le.acme.dnschallenge.resolvers=1.1.1.1:53,1.0.0.1:53"
      - "--certificatesresolvers.le.acme.dnschallenge.delayBeforeCheck=0"
      - "--api.insecure=false"
      - "--log.level=DEBUG"
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: ingress
      - target: 443
        published: 443
        protocol: tcp
        mode: ingress
    environment:
      - CLOUDFLARE_DNS_API_TOKEN
    secrets:
      - cf_api_key
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./acme.json:/acme.json"
    networks:
      - test-app_default
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
      labels:
        - "traefik.docker.network=test-app_default"

  frontend-main:
    image: edwardkemp/frontend:latest
    networks:
      - test-app_default
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      labels:
        - "traefik.enable=true"
        # Non-WWW router
        - "traefik.http.routers.frontend.rule=Host(`edward-codes.com`)"
        - "traefik.http.routers.frontend.entrypoints=websecure"
        - "traefik.http.routers.frontend.tls.certresolver=le"
        - "traefik.http.services.frontend.loadbalancer.server.port=80"
        # WWW â†’ Non-WWW redirect
        - "traefik.http.routers.frontend-www.rule=Host(`www.edward-codes.com`)"
        - "traefik.http.routers.frontend-www.entrypoints=websecure"
        - "traefik.http.routers.frontend-www.tls.certresolver=le"
        - "traefik.http.routers.frontend-www.middlewares=redirect-www"
        - "traefik.http.middlewares.redirect-www.redirectregex.regex=^https?://www\\.(.*)"
        - "traefik.http.middlewares.redirect-www.redirectregex.replacement=https://$${1}"
        - "traefik.http.middlewares.redirect-www.redirectregex.permanent=true"
