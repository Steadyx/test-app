version: '3.8'

services:
  traefik:
    image: traefik:v2.10
    command:
      # Enable the Traefik dashboard (can be disabled in production for security)
      - "--api=true"
      - "--api.dashboard=true"
      
      # Docker provider setup
      - "--providers.docker=true"

      # Entrypoints (HTTP and HTTPS)
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"

      # Configure automatic HTTPS with Let's Encrypt
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.myresolver.acme.email=edwardlanekemp@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock" # Allow Traefik to monitor Docker services
      - "letsencrypt:/letsencrypt"                 # Persistent storage for certificates
    deploy:
      placement:
        constraints:
          - "node.role == manager"                 # Ensure Traefik runs only on manager nodes

  frontend:
    image: your-dockerhub-username/frontend:latest
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`edward-codes.com`)" # Replace with your domain
      - "traefik.http.routers.frontend.entrypoints=websecure"        # Force HTTPS
      - "traefik.http.routers.frontend.tls.certresolver=myresolver"  # Use Let's Encrypt resolver

  backend:
    image: your-dockerhub-username/backend:latest
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`api.edward-codes.com`)" # Replace with your API domain
      - "traefik.http.routers.backend.entrypoints=websecure"            # Force HTTPS
      - "traefik.http.routers.backend.tls.certresolver=myresolver"      # Use Let's Encrypt resolver

volumes:
  letsencrypt:
