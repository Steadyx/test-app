name: Deploy to VPS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push frontend image
        uses: docker/build-push-action@v2
        with:
          context: ./frontend
          platforms: linux/amd64
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/frontend:latest

      - name: Build and push backend image
        uses: docker/build-push-action@v2
        with:
          context: ./backend
          platforms: linux/amd64
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/backend:latest

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_temp
          chmod 600 ~/.ssh/id_temp
          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/id_temp

      - name: Add Host Key to Known Hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.VPS_IP }} >> ~/.ssh/known_hosts

      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            if [ ! -d "/home/edwardkemp/websites/test-app" ]; then
              echo "Project directory does not exist. Cloning repository..."
              export GIT_SSH_COMMAND="ssh -i ~/.ssh/id_temp"
              git clone git@github.com:Steadyx/test-app.git /home/edwardkemp/websites/test-app
            else
              echo "Project directory exists. Pulling latest changes..."
              cd /home/edwardkemp/websites/test-app
              export GIT_SSH_COMMAND="ssh -i ~/.ssh/id_temp"
              git pull origin main
            fi

            cd /home/edwardkemp/websites/test-app
            docker stack deploy -c docker-compose.prod.yml test-app

      - name: Cleanup Temporary SSH Key
        run: |
          rm -f ~/.ssh/id_temp
